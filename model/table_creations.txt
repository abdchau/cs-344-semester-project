drop database if exists shopping;
create database shopping;


create table shopping.cities(
		cityID int primary key auto_increment,
		cityName varchar(20)
);

create table shopping.addresses(
		addressID int primary key auto_increment,
		address varchar(80),
		postcode varchar(5),
		cityID int, foreign key (cityID) references shopping.cities(cityID) on delete cascade
);

create table shopping.users(
	userID int primary key auto_increment,
	firstName varchar(20),
	lastName varchar(20),
	email varchar(20) unique not null,
	password varchar(20),
	isAdmin boolean default false,
	addressID int, foreign key(addressID) references shopping.addresses(addressID) on delete cascade
);

create table shopping.categories(
	categoryID int primary key auto_increment,
    categoryName varchar(80)
);

create table shopping.products(
	productID int primary key auto_increment,
    categoryID int, foreign key(categoryID) references shopping.categories(categoryID) on delete cascade,
    productName varchar(80),
    productDscrptn varchar(200),
    price int,
    imageURL varchar(100),
    stock int,
	featured boolean default false,
    sellerID int, foreign key(sellerID) references shopping.users(userID) on delete cascade
);

create table shopping.cart_item(
	productID int,
    foreign key(productID) references shopping.products(productID) on delete cascade,
    userID int,
	foreign key(userID) references shopping.users(userID) on delete cascade,
	primary key (productID, userID),
    quantity int,
    timeAdded datetime
);

create table shopping.orders(
	orderID int primary key auto_increment,
    buyerID int,  foreign key(buyerID) references shopping.users(userID) on delete cascade,
    amount int,
    billingName varchar(80),
    billingAddress varchar(150),
    timeCreated datetime
);

create table shopping.order_item(
	orderID int, foreign key(orderID) references shopping.orders(orderID) on delete cascade,
    productID int, foreign key(productID) references shopping.products(productID) on delete cascade,
    primary key (orderID, productID),
    quantity int
);